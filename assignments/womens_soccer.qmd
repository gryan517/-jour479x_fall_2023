---
title: "Women's Soccer Data"
output: html_notebook
---

We'll use this notebook to explore some NCAA women's soccer data and [our questions](https://docs.google.com/spreadsheets/d/1kTSrnl1URmcexIWLDMWqDnp3q-c2OS45uifnhjp10n4/edit#gid=0). First, let's load the tidyverse library:

```{r}
library(tidyverse)
```

We'll want to start with 2023 match data, which is located in [this GitHub repository](https://github.com/dwillis/NCAAWomensSoccerData). We can load the match data directly from GitHub using `read_csv`:


```{r}
matches_2023 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2023.csv")

matches_2022 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2022.csv")
```

Let's take a look at this data to see what it contains, using `head` and `glimpse`:

```{r}
head(matches_2023)
glimpse(matches_2023)
```
```{r}
head(matches_2022)
glimpse(matches_2022)
```

Now, onto the questions using aggregates, which means `group_by` and `summarize`:

1. How many shots in total has Maryland attempted and how many have been on goal? Calculate a percentage of shots on goal.

```{r}
matches_2023|>
  group_by(team)|>
  summarise(
    sum_goals = sum (sh_att), 
    sum_on_goal = sum(so_g), 
    percent = (sum_on_goal/sum_goals)*100
  )

```

2. What about the same shot stats from last season's first four games? You'll need to load the matches from 2022 - just change the season in the URL - and filter by date to find the first four games.

```{r}
matches_2022|> 
  filter(date < "2022-09-04")|>
  filter(team == "Maryland Terrapins, Terps")|>
  group_by(team)|>
  summarise(
    sum_goals = sum(sh_att), 
    sum_on_goal = sum(so_g), 
    percent = (sum_on_goal/sum_goals)*100
    )

```




3. What about draws - Maryland started 2022 with 4 ties. Have any other teams had as many this season?

```{r}
matches_2023|>
  group_by(team, team_score, opponent_score = team_score)|>
  summarise(
    count = n()
  )
#i've isolated the ties, but now i'm trying to figure out a way to bring together the amount of ties by team. i thought i would do this by the sum function, but im not sure how to apply it correctly. another idea would be the count function. once i found this i was arrange the info in desc order.
```


4. How many total corner kicks has Maryland had so far and how many have its opponents have? Calculate the difference between the two totals for every team.

```{r}
matches_2023|>
  group_by(team)|>
  summarise(
    sum_corners = sum (corners), 
    sum_opp_corners = sum(defensive_corners), 
    diff = (sum_corners-sum_opp_corners)
  ) |>
arrange(desc(diff))
```


## Significance Tests

Hypothesis: there is more scoring in women's soccer this season than last season. (more goals per game)

Add column to both dataframes that contain the total_goals for each match. To do this we will use mutate and we will save the results back to the same dataframe.

```{r}
matches_2022 <- matches_2022 |> mutate(total_goals = goals + defensive_goals)

matches_2023 <- matches_2023 |> mutate(total_goals = goals + defensive_goals)

```


```{r}
t.test(matches_2022$total_goals, matches_2023$total_goals)
```
 #$ references a specific column in that dataframe
 
 Results: We reject the null hypothesis. The scoring for womens soccer is more this season  than scoring for last season. You can see the mean of this season (y) is greater than the mean of last season (x).
 
The p-value is significantly less than .05 (our 95 percent confidence interval) meaning our hypothesis is TRUE. 

```{r}
matches_2022_early <- matches_2022 |> filter(date < '2022-09-14')
```

```{r}
t.test(matches_2022_early$total_goals, matches_2023$total_goals)
```
Results: We still reject the null hypothesis in the early part of the season last year compared to where womens soccer is this season. The scoring for womens soccer is narrowly up this season compared to  scoring for last season at this point in the season. You can see the mean of this season (y) is greater than the mean of last season (x).
 

The p-value is significantly less than .05 (our 95 percent confidence interval), meaning our hypothesis is TRUE. 



## Correlations 


```{r}
correlations <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2023.csv")
```


```{r}
newcorrelations <- correlations |> 
  mutate(
    differential = goals - defensive_goals
    )
```


```{r}
newcorrelations |> summarise(correlation = cor(differential, fouls, method="pearson"))
```
Very weak correlation (closer to 0).


```{r}
newcorrelations |> 
  summarise(correlation = cor(differential, yellow_cards, method="pearson"))
```
Weak, negative relationship. More yellow cards differential goes down slightly. The amount of yellow cards and goals a team has does not have a strong direct relationship. 


```{r}
fit <- lm(differential ~ fouls, data = newcorrelations)
summary(fit)
```

Not statistically significant (p-value is not less than .05, aka not extremely notable/trustworthy/not a lot of predictive power). 

Adjusted R-squared value: An adjusted percentage, fouls is insignificant in relation to goals. The larger the number, the stronger the relationship.

Intercept (b) & Fouls (m): y=mx+b

```{r}
newcorrelations |> 
  summarise(correlation = cor(differential, so_g, method="pearson"))
```


```{r}
net <- lm(differential ~ so_g, data = newcorrelations)
summary(net)
```
p-value: statistically significant

Adj R-squared : shots on goal account for about half of what goes into determining goal differential. Shots on goal are important.

y = 0.445467x + -2.530441
- plug in 11 shots on goal. 

```{r}
(0.445467*11)+-2.530441 
```
Interpreting: predicted UMD would have won about 2 goals.

```{r}
newcorrelations <- correlations |> 
  mutate(
    differential = shutouts - defensive_shutouts
    )
```

```{r}
newcorrelations |> summarise(correlation = cor(differential, saves, method="pearson"))
```
Moderate, negative relationship. More saves differential goes down slightly. The amount of saves and shutouts a team has does not have a strong direct relationship.

```{r}
fit <- lm(differential ~ saves, data = newcorrelations)
summary(fit)
```
p-value: Statistically significant. The difference in shutouts and saves are not random. 

Adj R-squared: counts for about 10% of what goes into the saves differential. We can explain 10% of the difference in shutouts by looking at saves.

Intercept (b) & Saves (m): y=(-.08)x+0.342

```{r}
(-.08)*14+0.342
```


##
